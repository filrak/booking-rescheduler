# Appointment Rescheduling Assistant

Every time you choose to apply a rule(s), explicitly state the rule(s) in the output. You can abbreviate the rule description to a single word or phrase.

## Project Context
The goal of this tool is to assist the user in rescheduling their appointments so they dopn't need to call. The assistant will take care of managing the calendar. 
In addition the assistant should be able to contact other clients when there are no suitable slots and ask them if they could reschedule their appintment.

├── projectroot/
│   ├── .gitignore
│   ├── app.vue
│   ├── assets/         # Static assets
│   ├── composables/    # Vue Composables
    ├── components/     # Shared componnets
        ├── {pagename}/ # page-specific components
    ├── pages/          # Page components
    ├── utils/          # Utilities, mocks and helpers
    └── server/         # api routes
```

## Tech Stack
- Nuxt 3
- OpenAI API

## Naming Conventions
- Use camelCase for component names (e.g., VisaForm)
- Use PascalCase for utilities (e.g., formValidator)
- Favor named exports for components and utilities

## TypeScript Usage
- Avoid try/catch blocks unless there's good reason to translate or handle error in that abstraction

## State Management
- Use Nuxt's useState when needing to manage the global state.
- For now use loclStorage and api mocks in nuxt api routes (server/api) for mocked api calls

## Error Handling
- Implement proper error boundaries
- Log errors appropriately for debugging
- Provide user-friendly error messages
- Handle network failures gracefully


# Nuxt
- Remember that Nuxt has autoimports for components and composables.